const path = require('path');
const webpack = require('webpack');
const merge = require('webpack-merge');
const LiveReloadPlugin = require('webpack-livereload-plugin');
const CopyWebpackPlugin = require('copy-webpack-plugin');
const _ = require('lodash');

const webpackCommon = require('./webpack-common.config');

const SRC_PATH = path.join(__dirname, '../src');
const DEST_PATH = path.join(__dirname, '../www');
const APP_PATH = path.join(__dirname, '../src/app');

const replaceConfig = [
	{from: 'ENV', to: 'qa'},
	{from: '\'DEBUG\'', to: 'true'},
	{from: '\'PROFILER\'', to: 'false'},
	{from: 'AUTHUSERNAME', to: 'fxmobiletest6@gs.com'},
	{from: 'AUTHPASSWORD', to: 'gsmark2'}

];

var config = webpackCommon[0];
config.devtool = 'inline-source-map';
config.entry = {};
config.output = {};
//Coverage options
config.isparta = {
	embedSource: false,
	noAutoWrap: true
}

// ISPARTA LOADER
// Reference: https://github.com/deepsweet/isparta-loader
// Instrument JS files with Isparta for subsequent code coverage reporting
// Skips node_modules and files that end with .test.js

https://github.com/deepsweet/istanbul-instrumenter-loader
config.module.preLoaders = [];
config.module.preLoaders.push({
	test: /\.js$/,
	include: APP_PATH,
	exclude: [
		/node_modules/,
		/\.spec\.js$/
	],
	loader: 'istanbul-instrumenter'
});

module.exports = config;


console.log(JSON.stringify(module.exports, null, 2));
